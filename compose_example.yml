services:
  web:
    build: .
    container_name: web
    restart: always
    depends_on:
      - postgres
      - keydb
    expose:
      - "3000"
    networks:
      - internal
      - misskey-web
    env_file:
      - .config/.env.misskey
    volumes:
      - ./.config:/misskey/.config:ro

  keydb:
    image: eqalpha/keydb:alpine
    container_name: keydb
    restart: always
    networks:
      - internal
    volumes:
      - ../misskey-data/misskey/keydb:/data
    healthcheck:
      test: "keydb-cli ping"
      interval: 5s
      retries: 20

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    restart: always
    networks:
      - internal
      - misskey-postgres
    env_file:
      - .config/.env.postgres
    volumes:
      - ../misskey-data/misskey/postgres:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"
      interval: 5s
      retries: 20

#  mcaptcha:
#    restart: always
#    image: mcaptcha/mcaptcha:latest
#    networks:
#      internal_network:
#      external_network:
#        aliases:
#          - localhost
#    ports:
#      - 7493:7493
#    env_file:
#      - .config/docker.env
#    environment:
#      PORT: 7493
#      MCAPTCHA_redis_URL: "redis://mcaptcha_redis/"
#    depends_on:
#      db:
#        condition: service_healthy
#      mcaptcha_redis:
#        condition: service_healthy
#
#  mcaptcha_redis:
#    image: mcaptcha/cache:latest
#    networks:
#      - internal_network
#    healthcheck:
#      test: "redis-cli ping"
#      interval: 5s
#      retries: 20

#  meilisearch:
#    restart: always
#    image: getmeili/meilisearch:v1.3.4
#    environment:
#      - MEILI_NO_ANALYTICS=true
#      - MEILI_ENV=production
#    env_file:
#      - .config/meilisearch.env
#    networks:
#      - internal_network
#    volumes:
#      - ./meili_data:/meili_data

networks:
  internal:
    internal: true
  misskey-web:
    external: true
  misskey-postgres:
    external: true
