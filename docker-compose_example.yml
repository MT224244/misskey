version: "3"

services:
  web:
    build: .
    container_name: web
    restart: always
    depends_on:
      - postgres
      - keydb
    expose:
      - "3000"
    networks:
      - internal
      - misskey-web
    env_file:
      - .config/.env.misskey
    volumes:
      - ./.config:/misskey/.config:ro

  keydb:
    image: eqalpha/keydb:alpine
    container_name: keydb
    restart: always
    networks:
      - internal
    volumes:
      - ../misskey-data/misskey/keydb:/data
    healthcheck:
      test: "keydb-cli ping"
      interval: 5s
      retries: 20

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    restart: always
    networks:
      - internal
      - misskey-postgres
    env_file:
      - .config/.env.postgres
    volumes:
      - ../misskey-data/misskey/postgres:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"
      interval: 5s
      retries: 20

networks:
  internal:
    internal: true
  misskey-web:
    external: true
  misskey-postgres:
    external: true
